@inherits Litehome.Components.Abstract.EditorPage<Income>
@page "/finance/income/{Id}"
@using Demolite.Db.Enum
@using Litehome.Db.Enum
@using Litehome.Db.Models
@using Litehome.Db.Models.Finance
@using Litehome.Services.Interfaces
@inject IHomeMemberService HomeMemberService
@inject IIncomeService IncomeService

<MudTablePage>
    <TitleContent>
        <MudText Typo="Typo.h5">Income Overview for @Member.Name</MudText>
    </TitleContent>
    <TableContent>
        <MudDataGrid
            Style="display: flex; flex-direction: column; height: 100%;"
            T="Income"
            CommittedItemChanges="ItemUpdated"
            FixedHeader="true"
            Items="Items" EditTrigger="DataGridEditTrigger.OnRowClick" EditMode="DataGridEditMode.Form" ReadOnly="false">
            <Columns>
                <PropertyColumn Property="x => x.Name" Title="Name"/>
                <PropertyColumn Property="x => x.Amount" Title="Amount"/>
                <PropertyColumn Property="x => x.Frequency" Title="Frequency">
                    <EditTemplate>
                        <MudSelect @bind-Value="context.Item.Frequency" Variant="Variant.Outlined" Label="Frequency">
                            @foreach (var frequency in Enum.GetValues<Frequency>())
                            {
                                <MudSelectItem Value="@frequency">@frequency.ToString()</MudSelectItem>
                            }
                        </MudSelect>
                    </EditTemplate>
                </PropertyColumn>
            </Columns>
        </MudDataGrid>
    </TableContent>
    <TableActionContent>
        <MudIconButton Icon="@Icons.Material.Filled.Add" Variant="Variant.Outlined" @onclick="Add"/>
    </TableActionContent>
    <SiteActionContent>
        <MudButton Variant="Variant.Outlined" Color="Color.Success" @onclick="Save">Save</MudButton>
        @if (HasUnsavedChanges)
        {
            <MudAlert Severity="Severity.Error">
                You have unsaved changes!
            </MudAlert>
        }
    </SiteActionContent>
</MudTablePage>

@code {

    [Parameter]
    public required string Id { get; set; }

    private HomeMember Member { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        await HomeMemberService.Load();
        await IncomeService.Load();

        Member = HomeMemberService.Items.First(x => x.Id == Id);

        Items = IncomeService
                .Items.Where(x => x.HomeMember == Member)
                .ToList();

        CheckForUnsavedChanges();
        await InvokeAsync(StateHasChanged);
    }

    private async Task Save()
    {
        IncomeService.Update(Items);
        var result = await IncomeService.Save();

        if (result)
        {
            SaveSuccess();
            await OnInitializedAsync();
        }

        else
            SaveError();
    }

    protected override Income CreateItem()
    {
        return new Income()
        {
            Name = "Please enter name",
            HomeMemberId = Member.Id,
            Amount = 0m,
            Frequency = Frequency.Monthly,
            OperationType = Operation.Created,
        };
    }

}